import {createContext} from 'react'
import {useReducer, useContext} from 'react'

let [some, setSome] = useState() - при вызове setSome мы должны передать новый объект который полностю замещает старый

useEffect(fan, []) - замен€ет все жизненные цыклы классов
            срабатывает всегда когда компонент хоть как то обновл€етс€
            функци€ переданна€ в useEffect запуститс€ всегда когда компонент хоть как то обновилс€
            имеет право делать любые побочные действи (запрос на сервер)
            вторым аргументом масив параметров от каких зависит изменение
            [] - эмул€ци€ хука componentDidMount (вызываетс€ когда html шаблон готов к дальнейшей работе)

useMemo(() => something **2, [something]) - как кампютед поле

useReducer - это обычна€ функци€ которую мы можем вызывать.
             всегда возвращает массив из двух параметров.
             первый - это state
             второй - это функци€ диспач
             дл€ больших объемов данных

useContext - 